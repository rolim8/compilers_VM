Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> functions
Rule 1     functions -> function functions
Rule 2     functions -> empty
Rule 3     function -> FUNC ID LPAREN params RPAREN LBR statements RBR
Rule 4     pcall -> logic pclist
Rule 5     pcall -> empty
Rule 6     pclist -> COMMA logic pclist
Rule 7     pclist -> empty
Rule 8     params -> ID plist
Rule 9     params -> empty
Rule 10    plist -> COMMA ID plist
Rule 11    plist -> empty
Rule 12    statements -> statement statements
Rule 13    statements -> empty
Rule 14    statement -> attrib
Rule 15    statement -> if
Rule 16    statement -> while
Rule 17    statement -> return
Rule 18    empty -> <empty>
Rule 19    if -> IF LPAREN logic RPAREN LBR statements RBR
Rule 20    while -> WHILE LPAREN logic RPAREN LBR statements RBR
Rule 21    return -> RETURN logic SEMICOLON
Rule 22    attrib -> ID ATTRIB logic SEMICOLON
Rule 23    logic -> logic LT logic
Rule 24    logic -> logic RT logic
Rule 25    logic -> logic LTE logic
Rule 26    logic -> logic RTE logic
Rule 27    logic -> logic DOUBLEEQUALS logic
Rule 28    logic -> logic NE logic
Rule 29    logic -> expression
Rule 30    expression -> expression PLUS expression
Rule 31    expression -> expression MINUS expression
Rule 32    expression -> term
Rule 33    term -> term TIMES term
Rule 34    term -> term DIVIDE term
Rule 35    term -> call
Rule 36    term -> NUMBER
Rule 37    term -> ID
Rule 38    call -> ID LPAREN pcall RPAREN
Rule 39    term -> LPAREN expression RPAREN

Terminals, with rules where they appear

ATTRIB               : 22
COMMA                : 6 10
DIVIDE               : 34
DOUBLEEQUALS         : 27
FUNC                 : 3
ID                   : 3 8 10 22 37 38
IF                   : 19
LBR                  : 3 19 20
LPAREN               : 3 19 20 38 39
LT                   : 23
LTE                  : 25
MINUS                : 31
NE                   : 28
NUMBER               : 36
PLUS                 : 30
RBR                  : 3 19 20
RETURN               : 21
RPAREN               : 3 19 20 38 39
RT                   : 24
RTE                  : 26
SEMICOLON            : 21 22
TIMES                : 33
WHILE                : 20
error                : 

Nonterminals, with rules where they appear

attrib               : 14
call                 : 35
empty                : 2 5 7 9 11 13
expression           : 29 30 30 31 31 39
function             : 1
functions            : 1 0
if                   : 15
logic                : 4 6 19 20 21 22 23 23 24 24 25 25 26 26 27 27 28 28
params               : 3
pcall                : 38
pclist               : 4 6
plist                : 8 10
return               : 17
statement            : 12
statements           : 3 12 19 20
term                 : 32 33 33 34 34
while                : 16

Parsing method: LALR

state 0

    (0) S' -> . functions
    (1) functions -> . function functions
    (2) functions -> . empty
    (3) function -> . FUNC ID LPAREN params RPAREN LBR statements RBR
    (18) empty -> .

    FUNC            shift and go to state 4
    $end            reduce using rule 18 (empty -> .)

    functions                      shift and go to state 1
    function                       shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> functions .



state 2

    (1) functions -> function . functions
    (1) functions -> . function functions
    (2) functions -> . empty
    (3) function -> . FUNC ID LPAREN params RPAREN LBR statements RBR
    (18) empty -> .

    FUNC            shift and go to state 4
    $end            reduce using rule 18 (empty -> .)

    function                       shift and go to state 2
    functions                      shift and go to state 5
    empty                          shift and go to state 3

state 3

    (2) functions -> empty .

    $end            reduce using rule 2 (functions -> empty .)


state 4

    (3) function -> FUNC . ID LPAREN params RPAREN LBR statements RBR

    ID              shift and go to state 6


state 5

    (1) functions -> function functions .

    $end            reduce using rule 1 (functions -> function functions .)


state 6

    (3) function -> FUNC ID . LPAREN params RPAREN LBR statements RBR

    LPAREN          shift and go to state 7


state 7

    (3) function -> FUNC ID LPAREN . params RPAREN LBR statements RBR
    (8) params -> . ID plist
    (9) params -> . empty
    (18) empty -> .

    ID              shift and go to state 8
    RPAREN          reduce using rule 18 (empty -> .)

    params                         shift and go to state 9
    empty                          shift and go to state 10

state 8

    (8) params -> ID . plist
    (10) plist -> . COMMA ID plist
    (11) plist -> . empty
    (18) empty -> .

    COMMA           shift and go to state 12
    RPAREN          reduce using rule 18 (empty -> .)

    plist                          shift and go to state 11
    empty                          shift and go to state 13

state 9

    (3) function -> FUNC ID LPAREN params . RPAREN LBR statements RBR

    RPAREN          shift and go to state 14


state 10

    (9) params -> empty .

    RPAREN          reduce using rule 9 (params -> empty .)


state 11

    (8) params -> ID plist .

    RPAREN          reduce using rule 8 (params -> ID plist .)


state 12

    (10) plist -> COMMA . ID plist

    ID              shift and go to state 15


state 13

    (11) plist -> empty .

    RPAREN          reduce using rule 11 (plist -> empty .)


state 14

    (3) function -> FUNC ID LPAREN params RPAREN . LBR statements RBR

    LBR             shift and go to state 16


state 15

    (10) plist -> COMMA ID . plist
    (10) plist -> . COMMA ID plist
    (11) plist -> . empty
    (18) empty -> .

    COMMA           shift and go to state 12
    RPAREN          reduce using rule 18 (empty -> .)

    plist                          shift and go to state 17
    empty                          shift and go to state 13

state 16

    (3) function -> FUNC ID LPAREN params RPAREN LBR . statements RBR
    (12) statements -> . statement statements
    (13) statements -> . empty
    (14) statement -> . attrib
    (15) statement -> . if
    (16) statement -> . while
    (17) statement -> . return
    (18) empty -> .
    (22) attrib -> . ID ATTRIB logic SEMICOLON
    (19) if -> . IF LPAREN logic RPAREN LBR statements RBR
    (20) while -> . WHILE LPAREN logic RPAREN LBR statements RBR
    (21) return -> . RETURN logic SEMICOLON

    RBR             reduce using rule 18 (empty -> .)
    ID              shift and go to state 18
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    RETURN          shift and go to state 28

    statements                     shift and go to state 19
    statement                      shift and go to state 20
    empty                          shift and go to state 21
    attrib                         shift and go to state 22
    if                             shift and go to state 23
    while                          shift and go to state 24
    return                         shift and go to state 25

state 17

    (10) plist -> COMMA ID plist .

    RPAREN          reduce using rule 10 (plist -> COMMA ID plist .)


state 18

    (22) attrib -> ID . ATTRIB logic SEMICOLON

    ATTRIB          shift and go to state 29


state 19

    (3) function -> FUNC ID LPAREN params RPAREN LBR statements . RBR

    RBR             shift and go to state 30


state 20

    (12) statements -> statement . statements
    (12) statements -> . statement statements
    (13) statements -> . empty
    (14) statement -> . attrib
    (15) statement -> . if
    (16) statement -> . while
    (17) statement -> . return
    (18) empty -> .
    (22) attrib -> . ID ATTRIB logic SEMICOLON
    (19) if -> . IF LPAREN logic RPAREN LBR statements RBR
    (20) while -> . WHILE LPAREN logic RPAREN LBR statements RBR
    (21) return -> . RETURN logic SEMICOLON

    RBR             reduce using rule 18 (empty -> .)
    ID              shift and go to state 18
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    RETURN          shift and go to state 28

    statement                      shift and go to state 20
    statements                     shift and go to state 31
    empty                          shift and go to state 21
    attrib                         shift and go to state 22
    if                             shift and go to state 23
    while                          shift and go to state 24
    return                         shift and go to state 25

state 21

    (13) statements -> empty .

    RBR             reduce using rule 13 (statements -> empty .)


state 22

    (14) statement -> attrib .

    ID              reduce using rule 14 (statement -> attrib .)
    IF              reduce using rule 14 (statement -> attrib .)
    WHILE           reduce using rule 14 (statement -> attrib .)
    RETURN          reduce using rule 14 (statement -> attrib .)
    RBR             reduce using rule 14 (statement -> attrib .)


state 23

    (15) statement -> if .

    ID              reduce using rule 15 (statement -> if .)
    IF              reduce using rule 15 (statement -> if .)
    WHILE           reduce using rule 15 (statement -> if .)
    RETURN          reduce using rule 15 (statement -> if .)
    RBR             reduce using rule 15 (statement -> if .)


state 24

    (16) statement -> while .

    ID              reduce using rule 16 (statement -> while .)
    IF              reduce using rule 16 (statement -> while .)
    WHILE           reduce using rule 16 (statement -> while .)
    RETURN          reduce using rule 16 (statement -> while .)
    RBR             reduce using rule 16 (statement -> while .)


state 25

    (17) statement -> return .

    ID              reduce using rule 17 (statement -> return .)
    IF              reduce using rule 17 (statement -> return .)
    WHILE           reduce using rule 17 (statement -> return .)
    RETURN          reduce using rule 17 (statement -> return .)
    RBR             reduce using rule 17 (statement -> return .)


state 26

    (19) if -> IF . LPAREN logic RPAREN LBR statements RBR

    LPAREN          shift and go to state 32


state 27

    (20) while -> WHILE . LPAREN logic RPAREN LBR statements RBR

    LPAREN          shift and go to state 33


state 28

    (21) return -> RETURN . logic SEMICOLON
    (23) logic -> . logic LT logic
    (24) logic -> . logic RT logic
    (25) logic -> . logic LTE logic
    (26) logic -> . logic RTE logic
    (27) logic -> . logic DOUBLEEQUALS logic
    (28) logic -> . logic NE logic
    (29) logic -> . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . term
    (33) term -> . term TIMES term
    (34) term -> . term DIVIDE term
    (35) term -> . call
    (36) term -> . NUMBER
    (37) term -> . ID
    (39) term -> . LPAREN expression RPAREN
    (38) call -> . ID LPAREN pcall RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    LPAREN          shift and go to state 40

    logic                          shift and go to state 34
    expression                     shift and go to state 35
    term                           shift and go to state 36
    call                           shift and go to state 37

state 29

    (22) attrib -> ID ATTRIB . logic SEMICOLON
    (23) logic -> . logic LT logic
    (24) logic -> . logic RT logic
    (25) logic -> . logic LTE logic
    (26) logic -> . logic RTE logic
    (27) logic -> . logic DOUBLEEQUALS logic
    (28) logic -> . logic NE logic
    (29) logic -> . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . term
    (33) term -> . term TIMES term
    (34) term -> . term DIVIDE term
    (35) term -> . call
    (36) term -> . NUMBER
    (37) term -> . ID
    (39) term -> . LPAREN expression RPAREN
    (38) call -> . ID LPAREN pcall RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    LPAREN          shift and go to state 40

    logic                          shift and go to state 41
    expression                     shift and go to state 35
    term                           shift and go to state 36
    call                           shift and go to state 37

state 30

    (3) function -> FUNC ID LPAREN params RPAREN LBR statements RBR .

    FUNC            reduce using rule 3 (function -> FUNC ID LPAREN params RPAREN LBR statements RBR .)
    $end            reduce using rule 3 (function -> FUNC ID LPAREN params RPAREN LBR statements RBR .)


state 31

    (12) statements -> statement statements .

    RBR             reduce using rule 12 (statements -> statement statements .)


state 32

    (19) if -> IF LPAREN . logic RPAREN LBR statements RBR
    (23) logic -> . logic LT logic
    (24) logic -> . logic RT logic
    (25) logic -> . logic LTE logic
    (26) logic -> . logic RTE logic
    (27) logic -> . logic DOUBLEEQUALS logic
    (28) logic -> . logic NE logic
    (29) logic -> . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . term
    (33) term -> . term TIMES term
    (34) term -> . term DIVIDE term
    (35) term -> . call
    (36) term -> . NUMBER
    (37) term -> . ID
    (39) term -> . LPAREN expression RPAREN
    (38) call -> . ID LPAREN pcall RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    LPAREN          shift and go to state 40

    logic                          shift and go to state 42
    expression                     shift and go to state 35
    term                           shift and go to state 36
    call                           shift and go to state 37

state 33

    (20) while -> WHILE LPAREN . logic RPAREN LBR statements RBR
    (23) logic -> . logic LT logic
    (24) logic -> . logic RT logic
    (25) logic -> . logic LTE logic
    (26) logic -> . logic RTE logic
    (27) logic -> . logic DOUBLEEQUALS logic
    (28) logic -> . logic NE logic
    (29) logic -> . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . term
    (33) term -> . term TIMES term
    (34) term -> . term DIVIDE term
    (35) term -> . call
    (36) term -> . NUMBER
    (37) term -> . ID
    (39) term -> . LPAREN expression RPAREN
    (38) call -> . ID LPAREN pcall RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    LPAREN          shift and go to state 40

    logic                          shift and go to state 43
    expression                     shift and go to state 35
    term                           shift and go to state 36
    call                           shift and go to state 37

state 34

    (21) return -> RETURN logic . SEMICOLON
    (23) logic -> logic . LT logic
    (24) logic -> logic . RT logic
    (25) logic -> logic . LTE logic
    (26) logic -> logic . RTE logic
    (27) logic -> logic . DOUBLEEQUALS logic
    (28) logic -> logic . NE logic

    SEMICOLON       shift and go to state 44
    LT              shift and go to state 45
    RT              shift and go to state 46
    LTE             shift and go to state 47
    RTE             shift and go to state 48
    DOUBLEEQUALS    shift and go to state 49
    NE              shift and go to state 50


state 35

    (29) logic -> expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression

    SEMICOLON       reduce using rule 29 (logic -> expression .)
    LT              reduce using rule 29 (logic -> expression .)
    RT              reduce using rule 29 (logic -> expression .)
    LTE             reduce using rule 29 (logic -> expression .)
    RTE             reduce using rule 29 (logic -> expression .)
    DOUBLEEQUALS    reduce using rule 29 (logic -> expression .)
    NE              reduce using rule 29 (logic -> expression .)
    RPAREN          reduce using rule 29 (logic -> expression .)
    COMMA           reduce using rule 29 (logic -> expression .)
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52


state 36

    (32) expression -> term .
    (33) term -> term . TIMES term
    (34) term -> term . DIVIDE term

    PLUS            reduce using rule 32 (expression -> term .)
    MINUS           reduce using rule 32 (expression -> term .)
    SEMICOLON       reduce using rule 32 (expression -> term .)
    LT              reduce using rule 32 (expression -> term .)
    RT              reduce using rule 32 (expression -> term .)
    LTE             reduce using rule 32 (expression -> term .)
    RTE             reduce using rule 32 (expression -> term .)
    DOUBLEEQUALS    reduce using rule 32 (expression -> term .)
    NE              reduce using rule 32 (expression -> term .)
    RPAREN          reduce using rule 32 (expression -> term .)
    COMMA           reduce using rule 32 (expression -> term .)
    TIMES           shift and go to state 53
    DIVIDE          shift and go to state 54


state 37

    (35) term -> call .

    TIMES           reduce using rule 35 (term -> call .)
    DIVIDE          reduce using rule 35 (term -> call .)
    PLUS            reduce using rule 35 (term -> call .)
    MINUS           reduce using rule 35 (term -> call .)
    SEMICOLON       reduce using rule 35 (term -> call .)
    LT              reduce using rule 35 (term -> call .)
    RT              reduce using rule 35 (term -> call .)
    LTE             reduce using rule 35 (term -> call .)
    RTE             reduce using rule 35 (term -> call .)
    DOUBLEEQUALS    reduce using rule 35 (term -> call .)
    NE              reduce using rule 35 (term -> call .)
    RPAREN          reduce using rule 35 (term -> call .)
    COMMA           reduce using rule 35 (term -> call .)


state 38

    (36) term -> NUMBER .

    TIMES           reduce using rule 36 (term -> NUMBER .)
    DIVIDE          reduce using rule 36 (term -> NUMBER .)
    PLUS            reduce using rule 36 (term -> NUMBER .)
    MINUS           reduce using rule 36 (term -> NUMBER .)
    SEMICOLON       reduce using rule 36 (term -> NUMBER .)
    LT              reduce using rule 36 (term -> NUMBER .)
    RT              reduce using rule 36 (term -> NUMBER .)
    LTE             reduce using rule 36 (term -> NUMBER .)
    RTE             reduce using rule 36 (term -> NUMBER .)
    DOUBLEEQUALS    reduce using rule 36 (term -> NUMBER .)
    NE              reduce using rule 36 (term -> NUMBER .)
    RPAREN          reduce using rule 36 (term -> NUMBER .)
    COMMA           reduce using rule 36 (term -> NUMBER .)


state 39

    (37) term -> ID .
    (38) call -> ID . LPAREN pcall RPAREN

    TIMES           reduce using rule 37 (term -> ID .)
    DIVIDE          reduce using rule 37 (term -> ID .)
    PLUS            reduce using rule 37 (term -> ID .)
    MINUS           reduce using rule 37 (term -> ID .)
    SEMICOLON       reduce using rule 37 (term -> ID .)
    LT              reduce using rule 37 (term -> ID .)
    RT              reduce using rule 37 (term -> ID .)
    LTE             reduce using rule 37 (term -> ID .)
    RTE             reduce using rule 37 (term -> ID .)
    DOUBLEEQUALS    reduce using rule 37 (term -> ID .)
    NE              reduce using rule 37 (term -> ID .)
    RPAREN          reduce using rule 37 (term -> ID .)
    COMMA           reduce using rule 37 (term -> ID .)
    LPAREN          shift and go to state 55


state 40

    (39) term -> LPAREN . expression RPAREN
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . term
    (33) term -> . term TIMES term
    (34) term -> . term DIVIDE term
    (35) term -> . call
    (36) term -> . NUMBER
    (37) term -> . ID
    (39) term -> . LPAREN expression RPAREN
    (38) call -> . ID LPAREN pcall RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    LPAREN          shift and go to state 40

    expression                     shift and go to state 56
    term                           shift and go to state 36
    call                           shift and go to state 37

state 41

    (22) attrib -> ID ATTRIB logic . SEMICOLON
    (23) logic -> logic . LT logic
    (24) logic -> logic . RT logic
    (25) logic -> logic . LTE logic
    (26) logic -> logic . RTE logic
    (27) logic -> logic . DOUBLEEQUALS logic
    (28) logic -> logic . NE logic

    SEMICOLON       shift and go to state 57
    LT              shift and go to state 45
    RT              shift and go to state 46
    LTE             shift and go to state 47
    RTE             shift and go to state 48
    DOUBLEEQUALS    shift and go to state 49
    NE              shift and go to state 50


state 42

    (19) if -> IF LPAREN logic . RPAREN LBR statements RBR
    (23) logic -> logic . LT logic
    (24) logic -> logic . RT logic
    (25) logic -> logic . LTE logic
    (26) logic -> logic . RTE logic
    (27) logic -> logic . DOUBLEEQUALS logic
    (28) logic -> logic . NE logic

    RPAREN          shift and go to state 58
    LT              shift and go to state 45
    RT              shift and go to state 46
    LTE             shift and go to state 47
    RTE             shift and go to state 48
    DOUBLEEQUALS    shift and go to state 49
    NE              shift and go to state 50


state 43

    (20) while -> WHILE LPAREN logic . RPAREN LBR statements RBR
    (23) logic -> logic . LT logic
    (24) logic -> logic . RT logic
    (25) logic -> logic . LTE logic
    (26) logic -> logic . RTE logic
    (27) logic -> logic . DOUBLEEQUALS logic
    (28) logic -> logic . NE logic

    RPAREN          shift and go to state 59
    LT              shift and go to state 45
    RT              shift and go to state 46
    LTE             shift and go to state 47
    RTE             shift and go to state 48
    DOUBLEEQUALS    shift and go to state 49
    NE              shift and go to state 50


state 44

    (21) return -> RETURN logic SEMICOLON .

    ID              reduce using rule 21 (return -> RETURN logic SEMICOLON .)
    IF              reduce using rule 21 (return -> RETURN logic SEMICOLON .)
    WHILE           reduce using rule 21 (return -> RETURN logic SEMICOLON .)
    RETURN          reduce using rule 21 (return -> RETURN logic SEMICOLON .)
    RBR             reduce using rule 21 (return -> RETURN logic SEMICOLON .)


state 45

    (23) logic -> logic LT . logic
    (23) logic -> . logic LT logic
    (24) logic -> . logic RT logic
    (25) logic -> . logic LTE logic
    (26) logic -> . logic RTE logic
    (27) logic -> . logic DOUBLEEQUALS logic
    (28) logic -> . logic NE logic
    (29) logic -> . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . term
    (33) term -> . term TIMES term
    (34) term -> . term DIVIDE term
    (35) term -> . call
    (36) term -> . NUMBER
    (37) term -> . ID
    (39) term -> . LPAREN expression RPAREN
    (38) call -> . ID LPAREN pcall RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    LPAREN          shift and go to state 40

    logic                          shift and go to state 60
    expression                     shift and go to state 35
    term                           shift and go to state 36
    call                           shift and go to state 37

state 46

    (24) logic -> logic RT . logic
    (23) logic -> . logic LT logic
    (24) logic -> . logic RT logic
    (25) logic -> . logic LTE logic
    (26) logic -> . logic RTE logic
    (27) logic -> . logic DOUBLEEQUALS logic
    (28) logic -> . logic NE logic
    (29) logic -> . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . term
    (33) term -> . term TIMES term
    (34) term -> . term DIVIDE term
    (35) term -> . call
    (36) term -> . NUMBER
    (37) term -> . ID
    (39) term -> . LPAREN expression RPAREN
    (38) call -> . ID LPAREN pcall RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    LPAREN          shift and go to state 40

    logic                          shift and go to state 61
    expression                     shift and go to state 35
    term                           shift and go to state 36
    call                           shift and go to state 37

state 47

    (25) logic -> logic LTE . logic
    (23) logic -> . logic LT logic
    (24) logic -> . logic RT logic
    (25) logic -> . logic LTE logic
    (26) logic -> . logic RTE logic
    (27) logic -> . logic DOUBLEEQUALS logic
    (28) logic -> . logic NE logic
    (29) logic -> . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . term
    (33) term -> . term TIMES term
    (34) term -> . term DIVIDE term
    (35) term -> . call
    (36) term -> . NUMBER
    (37) term -> . ID
    (39) term -> . LPAREN expression RPAREN
    (38) call -> . ID LPAREN pcall RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    LPAREN          shift and go to state 40

    logic                          shift and go to state 62
    expression                     shift and go to state 35
    term                           shift and go to state 36
    call                           shift and go to state 37

state 48

    (26) logic -> logic RTE . logic
    (23) logic -> . logic LT logic
    (24) logic -> . logic RT logic
    (25) logic -> . logic LTE logic
    (26) logic -> . logic RTE logic
    (27) logic -> . logic DOUBLEEQUALS logic
    (28) logic -> . logic NE logic
    (29) logic -> . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . term
    (33) term -> . term TIMES term
    (34) term -> . term DIVIDE term
    (35) term -> . call
    (36) term -> . NUMBER
    (37) term -> . ID
    (39) term -> . LPAREN expression RPAREN
    (38) call -> . ID LPAREN pcall RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    LPAREN          shift and go to state 40

    logic                          shift and go to state 63
    expression                     shift and go to state 35
    term                           shift and go to state 36
    call                           shift and go to state 37

state 49

    (27) logic -> logic DOUBLEEQUALS . logic
    (23) logic -> . logic LT logic
    (24) logic -> . logic RT logic
    (25) logic -> . logic LTE logic
    (26) logic -> . logic RTE logic
    (27) logic -> . logic DOUBLEEQUALS logic
    (28) logic -> . logic NE logic
    (29) logic -> . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . term
    (33) term -> . term TIMES term
    (34) term -> . term DIVIDE term
    (35) term -> . call
    (36) term -> . NUMBER
    (37) term -> . ID
    (39) term -> . LPAREN expression RPAREN
    (38) call -> . ID LPAREN pcall RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    LPAREN          shift and go to state 40

    logic                          shift and go to state 64
    expression                     shift and go to state 35
    term                           shift and go to state 36
    call                           shift and go to state 37

state 50

    (28) logic -> logic NE . logic
    (23) logic -> . logic LT logic
    (24) logic -> . logic RT logic
    (25) logic -> . logic LTE logic
    (26) logic -> . logic RTE logic
    (27) logic -> . logic DOUBLEEQUALS logic
    (28) logic -> . logic NE logic
    (29) logic -> . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . term
    (33) term -> . term TIMES term
    (34) term -> . term DIVIDE term
    (35) term -> . call
    (36) term -> . NUMBER
    (37) term -> . ID
    (39) term -> . LPAREN expression RPAREN
    (38) call -> . ID LPAREN pcall RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    LPAREN          shift and go to state 40

    logic                          shift and go to state 65
    expression                     shift and go to state 35
    term                           shift and go to state 36
    call                           shift and go to state 37

state 51

    (30) expression -> expression PLUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . term
    (33) term -> . term TIMES term
    (34) term -> . term DIVIDE term
    (35) term -> . call
    (36) term -> . NUMBER
    (37) term -> . ID
    (39) term -> . LPAREN expression RPAREN
    (38) call -> . ID LPAREN pcall RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    LPAREN          shift and go to state 40

    expression                     shift and go to state 66
    term                           shift and go to state 36
    call                           shift and go to state 37

state 52

    (31) expression -> expression MINUS . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . term
    (33) term -> . term TIMES term
    (34) term -> . term DIVIDE term
    (35) term -> . call
    (36) term -> . NUMBER
    (37) term -> . ID
    (39) term -> . LPAREN expression RPAREN
    (38) call -> . ID LPAREN pcall RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    LPAREN          shift and go to state 40

    expression                     shift and go to state 67
    term                           shift and go to state 36
    call                           shift and go to state 37

state 53

    (33) term -> term TIMES . term
    (33) term -> . term TIMES term
    (34) term -> . term DIVIDE term
    (35) term -> . call
    (36) term -> . NUMBER
    (37) term -> . ID
    (39) term -> . LPAREN expression RPAREN
    (38) call -> . ID LPAREN pcall RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    LPAREN          shift and go to state 40

    term                           shift and go to state 68
    call                           shift and go to state 37

state 54

    (34) term -> term DIVIDE . term
    (33) term -> . term TIMES term
    (34) term -> . term DIVIDE term
    (35) term -> . call
    (36) term -> . NUMBER
    (37) term -> . ID
    (39) term -> . LPAREN expression RPAREN
    (38) call -> . ID LPAREN pcall RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    LPAREN          shift and go to state 40

    term                           shift and go to state 69
    call                           shift and go to state 37

state 55

    (38) call -> ID LPAREN . pcall RPAREN
    (4) pcall -> . logic pclist
    (5) pcall -> . empty
    (23) logic -> . logic LT logic
    (24) logic -> . logic RT logic
    (25) logic -> . logic LTE logic
    (26) logic -> . logic RTE logic
    (27) logic -> . logic DOUBLEEQUALS logic
    (28) logic -> . logic NE logic
    (29) logic -> . expression
    (18) empty -> .
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . term
    (33) term -> . term TIMES term
    (34) term -> . term DIVIDE term
    (35) term -> . call
    (36) term -> . NUMBER
    (37) term -> . ID
    (39) term -> . LPAREN expression RPAREN
    (38) call -> . ID LPAREN pcall RPAREN

    RPAREN          reduce using rule 18 (empty -> .)
    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    LPAREN          shift and go to state 40

    pcall                          shift and go to state 70
    logic                          shift and go to state 71
    empty                          shift and go to state 72
    expression                     shift and go to state 35
    term                           shift and go to state 36
    call                           shift and go to state 37

state 56

    (39) term -> LPAREN expression . RPAREN
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression

    RPAREN          shift and go to state 73
    PLUS            shift and go to state 51
    MINUS           shift and go to state 52


state 57

    (22) attrib -> ID ATTRIB logic SEMICOLON .

    ID              reduce using rule 22 (attrib -> ID ATTRIB logic SEMICOLON .)
    IF              reduce using rule 22 (attrib -> ID ATTRIB logic SEMICOLON .)
    WHILE           reduce using rule 22 (attrib -> ID ATTRIB logic SEMICOLON .)
    RETURN          reduce using rule 22 (attrib -> ID ATTRIB logic SEMICOLON .)
    RBR             reduce using rule 22 (attrib -> ID ATTRIB logic SEMICOLON .)


state 58

    (19) if -> IF LPAREN logic RPAREN . LBR statements RBR

    LBR             shift and go to state 74


state 59

    (20) while -> WHILE LPAREN logic RPAREN . LBR statements RBR

    LBR             shift and go to state 75


state 60

    (23) logic -> logic LT logic .
    (23) logic -> logic . LT logic
    (24) logic -> logic . RT logic
    (25) logic -> logic . LTE logic
    (26) logic -> logic . RTE logic
    (27) logic -> logic . DOUBLEEQUALS logic
    (28) logic -> logic . NE logic

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for RT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for RTE resolved as shift
  ! shift/reduce conflict for DOUBLEEQUALS resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 23 (logic -> logic LT logic .)
    RPAREN          reduce using rule 23 (logic -> logic LT logic .)
    COMMA           reduce using rule 23 (logic -> logic LT logic .)
    LT              shift and go to state 45
    RT              shift and go to state 46
    LTE             shift and go to state 47
    RTE             shift and go to state 48
    DOUBLEEQUALS    shift and go to state 49
    NE              shift and go to state 50

  ! LT              [ reduce using rule 23 (logic -> logic LT logic .) ]
  ! RT              [ reduce using rule 23 (logic -> logic LT logic .) ]
  ! LTE             [ reduce using rule 23 (logic -> logic LT logic .) ]
  ! RTE             [ reduce using rule 23 (logic -> logic LT logic .) ]
  ! DOUBLEEQUALS    [ reduce using rule 23 (logic -> logic LT logic .) ]
  ! NE              [ reduce using rule 23 (logic -> logic LT logic .) ]


state 61

    (24) logic -> logic RT logic .
    (23) logic -> logic . LT logic
    (24) logic -> logic . RT logic
    (25) logic -> logic . LTE logic
    (26) logic -> logic . RTE logic
    (27) logic -> logic . DOUBLEEQUALS logic
    (28) logic -> logic . NE logic

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for RT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for RTE resolved as shift
  ! shift/reduce conflict for DOUBLEEQUALS resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 24 (logic -> logic RT logic .)
    RPAREN          reduce using rule 24 (logic -> logic RT logic .)
    COMMA           reduce using rule 24 (logic -> logic RT logic .)
    LT              shift and go to state 45
    RT              shift and go to state 46
    LTE             shift and go to state 47
    RTE             shift and go to state 48
    DOUBLEEQUALS    shift and go to state 49
    NE              shift and go to state 50

  ! LT              [ reduce using rule 24 (logic -> logic RT logic .) ]
  ! RT              [ reduce using rule 24 (logic -> logic RT logic .) ]
  ! LTE             [ reduce using rule 24 (logic -> logic RT logic .) ]
  ! RTE             [ reduce using rule 24 (logic -> logic RT logic .) ]
  ! DOUBLEEQUALS    [ reduce using rule 24 (logic -> logic RT logic .) ]
  ! NE              [ reduce using rule 24 (logic -> logic RT logic .) ]


state 62

    (25) logic -> logic LTE logic .
    (23) logic -> logic . LT logic
    (24) logic -> logic . RT logic
    (25) logic -> logic . LTE logic
    (26) logic -> logic . RTE logic
    (27) logic -> logic . DOUBLEEQUALS logic
    (28) logic -> logic . NE logic

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for RT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for RTE resolved as shift
  ! shift/reduce conflict for DOUBLEEQUALS resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 25 (logic -> logic LTE logic .)
    RPAREN          reduce using rule 25 (logic -> logic LTE logic .)
    COMMA           reduce using rule 25 (logic -> logic LTE logic .)
    LT              shift and go to state 45
    RT              shift and go to state 46
    LTE             shift and go to state 47
    RTE             shift and go to state 48
    DOUBLEEQUALS    shift and go to state 49
    NE              shift and go to state 50

  ! LT              [ reduce using rule 25 (logic -> logic LTE logic .) ]
  ! RT              [ reduce using rule 25 (logic -> logic LTE logic .) ]
  ! LTE             [ reduce using rule 25 (logic -> logic LTE logic .) ]
  ! RTE             [ reduce using rule 25 (logic -> logic LTE logic .) ]
  ! DOUBLEEQUALS    [ reduce using rule 25 (logic -> logic LTE logic .) ]
  ! NE              [ reduce using rule 25 (logic -> logic LTE logic .) ]


state 63

    (26) logic -> logic RTE logic .
    (23) logic -> logic . LT logic
    (24) logic -> logic . RT logic
    (25) logic -> logic . LTE logic
    (26) logic -> logic . RTE logic
    (27) logic -> logic . DOUBLEEQUALS logic
    (28) logic -> logic . NE logic

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for RT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for RTE resolved as shift
  ! shift/reduce conflict for DOUBLEEQUALS resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 26 (logic -> logic RTE logic .)
    RPAREN          reduce using rule 26 (logic -> logic RTE logic .)
    COMMA           reduce using rule 26 (logic -> logic RTE logic .)
    LT              shift and go to state 45
    RT              shift and go to state 46
    LTE             shift and go to state 47
    RTE             shift and go to state 48
    DOUBLEEQUALS    shift and go to state 49
    NE              shift and go to state 50

  ! LT              [ reduce using rule 26 (logic -> logic RTE logic .) ]
  ! RT              [ reduce using rule 26 (logic -> logic RTE logic .) ]
  ! LTE             [ reduce using rule 26 (logic -> logic RTE logic .) ]
  ! RTE             [ reduce using rule 26 (logic -> logic RTE logic .) ]
  ! DOUBLEEQUALS    [ reduce using rule 26 (logic -> logic RTE logic .) ]
  ! NE              [ reduce using rule 26 (logic -> logic RTE logic .) ]


state 64

    (27) logic -> logic DOUBLEEQUALS logic .
    (23) logic -> logic . LT logic
    (24) logic -> logic . RT logic
    (25) logic -> logic . LTE logic
    (26) logic -> logic . RTE logic
    (27) logic -> logic . DOUBLEEQUALS logic
    (28) logic -> logic . NE logic

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for RT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for RTE resolved as shift
  ! shift/reduce conflict for DOUBLEEQUALS resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 27 (logic -> logic DOUBLEEQUALS logic .)
    RPAREN          reduce using rule 27 (logic -> logic DOUBLEEQUALS logic .)
    COMMA           reduce using rule 27 (logic -> logic DOUBLEEQUALS logic .)
    LT              shift and go to state 45
    RT              shift and go to state 46
    LTE             shift and go to state 47
    RTE             shift and go to state 48
    DOUBLEEQUALS    shift and go to state 49
    NE              shift and go to state 50

  ! LT              [ reduce using rule 27 (logic -> logic DOUBLEEQUALS logic .) ]
  ! RT              [ reduce using rule 27 (logic -> logic DOUBLEEQUALS logic .) ]
  ! LTE             [ reduce using rule 27 (logic -> logic DOUBLEEQUALS logic .) ]
  ! RTE             [ reduce using rule 27 (logic -> logic DOUBLEEQUALS logic .) ]
  ! DOUBLEEQUALS    [ reduce using rule 27 (logic -> logic DOUBLEEQUALS logic .) ]
  ! NE              [ reduce using rule 27 (logic -> logic DOUBLEEQUALS logic .) ]


state 65

    (28) logic -> logic NE logic .
    (23) logic -> logic . LT logic
    (24) logic -> logic . RT logic
    (25) logic -> logic . LTE logic
    (26) logic -> logic . RTE logic
    (27) logic -> logic . DOUBLEEQUALS logic
    (28) logic -> logic . NE logic

  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for RT resolved as shift
  ! shift/reduce conflict for LTE resolved as shift
  ! shift/reduce conflict for RTE resolved as shift
  ! shift/reduce conflict for DOUBLEEQUALS resolved as shift
  ! shift/reduce conflict for NE resolved as shift
    SEMICOLON       reduce using rule 28 (logic -> logic NE logic .)
    RPAREN          reduce using rule 28 (logic -> logic NE logic .)
    COMMA           reduce using rule 28 (logic -> logic NE logic .)
    LT              shift and go to state 45
    RT              shift and go to state 46
    LTE             shift and go to state 47
    RTE             shift and go to state 48
    DOUBLEEQUALS    shift and go to state 49
    NE              shift and go to state 50

  ! LT              [ reduce using rule 28 (logic -> logic NE logic .) ]
  ! RT              [ reduce using rule 28 (logic -> logic NE logic .) ]
  ! LTE             [ reduce using rule 28 (logic -> logic NE logic .) ]
  ! RTE             [ reduce using rule 28 (logic -> logic NE logic .) ]
  ! DOUBLEEQUALS    [ reduce using rule 28 (logic -> logic NE logic .) ]
  ! NE              [ reduce using rule 28 (logic -> logic NE logic .) ]


state 66

    (30) expression -> expression PLUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression

    PLUS            reduce using rule 30 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 30 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression PLUS expression .)
    LT              reduce using rule 30 (expression -> expression PLUS expression .)
    RT              reduce using rule 30 (expression -> expression PLUS expression .)
    LTE             reduce using rule 30 (expression -> expression PLUS expression .)
    RTE             reduce using rule 30 (expression -> expression PLUS expression .)
    DOUBLEEQUALS    reduce using rule 30 (expression -> expression PLUS expression .)
    NE              reduce using rule 30 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 30 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 30 (expression -> expression PLUS expression .)

  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]


state 67

    (31) expression -> expression MINUS expression .
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression

    PLUS            reduce using rule 31 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 31 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression MINUS expression .)
    LT              reduce using rule 31 (expression -> expression MINUS expression .)
    RT              reduce using rule 31 (expression -> expression MINUS expression .)
    LTE             reduce using rule 31 (expression -> expression MINUS expression .)
    RTE             reduce using rule 31 (expression -> expression MINUS expression .)
    DOUBLEEQUALS    reduce using rule 31 (expression -> expression MINUS expression .)
    NE              reduce using rule 31 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 31 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 31 (expression -> expression MINUS expression .)

  ! PLUS            [ shift and go to state 51 ]
  ! MINUS           [ shift and go to state 52 ]


state 68

    (33) term -> term TIMES term .
    (33) term -> term . TIMES term
    (34) term -> term . DIVIDE term

    TIMES           reduce using rule 33 (term -> term TIMES term .)
    DIVIDE          reduce using rule 33 (term -> term TIMES term .)
    PLUS            reduce using rule 33 (term -> term TIMES term .)
    MINUS           reduce using rule 33 (term -> term TIMES term .)
    SEMICOLON       reduce using rule 33 (term -> term TIMES term .)
    LT              reduce using rule 33 (term -> term TIMES term .)
    RT              reduce using rule 33 (term -> term TIMES term .)
    LTE             reduce using rule 33 (term -> term TIMES term .)
    RTE             reduce using rule 33 (term -> term TIMES term .)
    DOUBLEEQUALS    reduce using rule 33 (term -> term TIMES term .)
    NE              reduce using rule 33 (term -> term TIMES term .)
    RPAREN          reduce using rule 33 (term -> term TIMES term .)
    COMMA           reduce using rule 33 (term -> term TIMES term .)

  ! TIMES           [ shift and go to state 53 ]
  ! DIVIDE          [ shift and go to state 54 ]


state 69

    (34) term -> term DIVIDE term .
    (33) term -> term . TIMES term
    (34) term -> term . DIVIDE term

    TIMES           reduce using rule 34 (term -> term DIVIDE term .)
    DIVIDE          reduce using rule 34 (term -> term DIVIDE term .)
    PLUS            reduce using rule 34 (term -> term DIVIDE term .)
    MINUS           reduce using rule 34 (term -> term DIVIDE term .)
    SEMICOLON       reduce using rule 34 (term -> term DIVIDE term .)
    LT              reduce using rule 34 (term -> term DIVIDE term .)
    RT              reduce using rule 34 (term -> term DIVIDE term .)
    LTE             reduce using rule 34 (term -> term DIVIDE term .)
    RTE             reduce using rule 34 (term -> term DIVIDE term .)
    DOUBLEEQUALS    reduce using rule 34 (term -> term DIVIDE term .)
    NE              reduce using rule 34 (term -> term DIVIDE term .)
    RPAREN          reduce using rule 34 (term -> term DIVIDE term .)
    COMMA           reduce using rule 34 (term -> term DIVIDE term .)

  ! TIMES           [ shift and go to state 53 ]
  ! DIVIDE          [ shift and go to state 54 ]


state 70

    (38) call -> ID LPAREN pcall . RPAREN

    RPAREN          shift and go to state 76


state 71

    (4) pcall -> logic . pclist
    (23) logic -> logic . LT logic
    (24) logic -> logic . RT logic
    (25) logic -> logic . LTE logic
    (26) logic -> logic . RTE logic
    (27) logic -> logic . DOUBLEEQUALS logic
    (28) logic -> logic . NE logic
    (6) pclist -> . COMMA logic pclist
    (7) pclist -> . empty
    (18) empty -> .

    LT              shift and go to state 45
    RT              shift and go to state 46
    LTE             shift and go to state 47
    RTE             shift and go to state 48
    DOUBLEEQUALS    shift and go to state 49
    NE              shift and go to state 50
    COMMA           shift and go to state 78
    RPAREN          reduce using rule 18 (empty -> .)

    pclist                         shift and go to state 77
    empty                          shift and go to state 79

state 72

    (5) pcall -> empty .

    RPAREN          reduce using rule 5 (pcall -> empty .)


state 73

    (39) term -> LPAREN expression RPAREN .

    TIMES           reduce using rule 39 (term -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 39 (term -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 39 (term -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 39 (term -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 39 (term -> LPAREN expression RPAREN .)
    LT              reduce using rule 39 (term -> LPAREN expression RPAREN .)
    RT              reduce using rule 39 (term -> LPAREN expression RPAREN .)
    LTE             reduce using rule 39 (term -> LPAREN expression RPAREN .)
    RTE             reduce using rule 39 (term -> LPAREN expression RPAREN .)
    DOUBLEEQUALS    reduce using rule 39 (term -> LPAREN expression RPAREN .)
    NE              reduce using rule 39 (term -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 39 (term -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 39 (term -> LPAREN expression RPAREN .)


state 74

    (19) if -> IF LPAREN logic RPAREN LBR . statements RBR
    (12) statements -> . statement statements
    (13) statements -> . empty
    (14) statement -> . attrib
    (15) statement -> . if
    (16) statement -> . while
    (17) statement -> . return
    (18) empty -> .
    (22) attrib -> . ID ATTRIB logic SEMICOLON
    (19) if -> . IF LPAREN logic RPAREN LBR statements RBR
    (20) while -> . WHILE LPAREN logic RPAREN LBR statements RBR
    (21) return -> . RETURN logic SEMICOLON

    RBR             reduce using rule 18 (empty -> .)
    ID              shift and go to state 18
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    RETURN          shift and go to state 28

    statements                     shift and go to state 80
    statement                      shift and go to state 20
    empty                          shift and go to state 21
    attrib                         shift and go to state 22
    if                             shift and go to state 23
    while                          shift and go to state 24
    return                         shift and go to state 25

state 75

    (20) while -> WHILE LPAREN logic RPAREN LBR . statements RBR
    (12) statements -> . statement statements
    (13) statements -> . empty
    (14) statement -> . attrib
    (15) statement -> . if
    (16) statement -> . while
    (17) statement -> . return
    (18) empty -> .
    (22) attrib -> . ID ATTRIB logic SEMICOLON
    (19) if -> . IF LPAREN logic RPAREN LBR statements RBR
    (20) while -> . WHILE LPAREN logic RPAREN LBR statements RBR
    (21) return -> . RETURN logic SEMICOLON

    RBR             reduce using rule 18 (empty -> .)
    ID              shift and go to state 18
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    RETURN          shift and go to state 28

    statements                     shift and go to state 81
    statement                      shift and go to state 20
    empty                          shift and go to state 21
    attrib                         shift and go to state 22
    if                             shift and go to state 23
    while                          shift and go to state 24
    return                         shift and go to state 25

state 76

    (38) call -> ID LPAREN pcall RPAREN .

    TIMES           reduce using rule 38 (call -> ID LPAREN pcall RPAREN .)
    DIVIDE          reduce using rule 38 (call -> ID LPAREN pcall RPAREN .)
    PLUS            reduce using rule 38 (call -> ID LPAREN pcall RPAREN .)
    MINUS           reduce using rule 38 (call -> ID LPAREN pcall RPAREN .)
    SEMICOLON       reduce using rule 38 (call -> ID LPAREN pcall RPAREN .)
    LT              reduce using rule 38 (call -> ID LPAREN pcall RPAREN .)
    RT              reduce using rule 38 (call -> ID LPAREN pcall RPAREN .)
    LTE             reduce using rule 38 (call -> ID LPAREN pcall RPAREN .)
    RTE             reduce using rule 38 (call -> ID LPAREN pcall RPAREN .)
    DOUBLEEQUALS    reduce using rule 38 (call -> ID LPAREN pcall RPAREN .)
    NE              reduce using rule 38 (call -> ID LPAREN pcall RPAREN .)
    RPAREN          reduce using rule 38 (call -> ID LPAREN pcall RPAREN .)
    COMMA           reduce using rule 38 (call -> ID LPAREN pcall RPAREN .)


state 77

    (4) pcall -> logic pclist .

    RPAREN          reduce using rule 4 (pcall -> logic pclist .)


state 78

    (6) pclist -> COMMA . logic pclist
    (23) logic -> . logic LT logic
    (24) logic -> . logic RT logic
    (25) logic -> . logic LTE logic
    (26) logic -> . logic RTE logic
    (27) logic -> . logic DOUBLEEQUALS logic
    (28) logic -> . logic NE logic
    (29) logic -> . expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . term
    (33) term -> . term TIMES term
    (34) term -> . term DIVIDE term
    (35) term -> . call
    (36) term -> . NUMBER
    (37) term -> . ID
    (39) term -> . LPAREN expression RPAREN
    (38) call -> . ID LPAREN pcall RPAREN

    NUMBER          shift and go to state 38
    ID              shift and go to state 39
    LPAREN          shift and go to state 40

    logic                          shift and go to state 82
    expression                     shift and go to state 35
    term                           shift and go to state 36
    call                           shift and go to state 37

state 79

    (7) pclist -> empty .

    RPAREN          reduce using rule 7 (pclist -> empty .)


state 80

    (19) if -> IF LPAREN logic RPAREN LBR statements . RBR

    RBR             shift and go to state 83


state 81

    (20) while -> WHILE LPAREN logic RPAREN LBR statements . RBR

    RBR             shift and go to state 84


state 82

    (6) pclist -> COMMA logic . pclist
    (23) logic -> logic . LT logic
    (24) logic -> logic . RT logic
    (25) logic -> logic . LTE logic
    (26) logic -> logic . RTE logic
    (27) logic -> logic . DOUBLEEQUALS logic
    (28) logic -> logic . NE logic
    (6) pclist -> . COMMA logic pclist
    (7) pclist -> . empty
    (18) empty -> .

    LT              shift and go to state 45
    RT              shift and go to state 46
    LTE             shift and go to state 47
    RTE             shift and go to state 48
    DOUBLEEQUALS    shift and go to state 49
    NE              shift and go to state 50
    COMMA           shift and go to state 78
    RPAREN          reduce using rule 18 (empty -> .)

    pclist                         shift and go to state 85
    empty                          shift and go to state 79

state 83

    (19) if -> IF LPAREN logic RPAREN LBR statements RBR .

    ID              reduce using rule 19 (if -> IF LPAREN logic RPAREN LBR statements RBR .)
    IF              reduce using rule 19 (if -> IF LPAREN logic RPAREN LBR statements RBR .)
    WHILE           reduce using rule 19 (if -> IF LPAREN logic RPAREN LBR statements RBR .)
    RETURN          reduce using rule 19 (if -> IF LPAREN logic RPAREN LBR statements RBR .)
    RBR             reduce using rule 19 (if -> IF LPAREN logic RPAREN LBR statements RBR .)


state 84

    (20) while -> WHILE LPAREN logic RPAREN LBR statements RBR .

    ID              reduce using rule 20 (while -> WHILE LPAREN logic RPAREN LBR statements RBR .)
    IF              reduce using rule 20 (while -> WHILE LPAREN logic RPAREN LBR statements RBR .)
    WHILE           reduce using rule 20 (while -> WHILE LPAREN logic RPAREN LBR statements RBR .)
    RETURN          reduce using rule 20 (while -> WHILE LPAREN logic RPAREN LBR statements RBR .)
    RBR             reduce using rule 20 (while -> WHILE LPAREN logic RPAREN LBR statements RBR .)


state 85

    (6) pclist -> COMMA logic pclist .

    RPAREN          reduce using rule 6 (pclist -> COMMA logic pclist .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LT in state 60 resolved as shift
WARNING: shift/reduce conflict for RT in state 60 resolved as shift
WARNING: shift/reduce conflict for LTE in state 60 resolved as shift
WARNING: shift/reduce conflict for RTE in state 60 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUALS in state 60 resolved as shift
WARNING: shift/reduce conflict for NE in state 60 resolved as shift
WARNING: shift/reduce conflict for LT in state 61 resolved as shift
WARNING: shift/reduce conflict for RT in state 61 resolved as shift
WARNING: shift/reduce conflict for LTE in state 61 resolved as shift
WARNING: shift/reduce conflict for RTE in state 61 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUALS in state 61 resolved as shift
WARNING: shift/reduce conflict for NE in state 61 resolved as shift
WARNING: shift/reduce conflict for LT in state 62 resolved as shift
WARNING: shift/reduce conflict for RT in state 62 resolved as shift
WARNING: shift/reduce conflict for LTE in state 62 resolved as shift
WARNING: shift/reduce conflict for RTE in state 62 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUALS in state 62 resolved as shift
WARNING: shift/reduce conflict for NE in state 62 resolved as shift
WARNING: shift/reduce conflict for LT in state 63 resolved as shift
WARNING: shift/reduce conflict for RT in state 63 resolved as shift
WARNING: shift/reduce conflict for LTE in state 63 resolved as shift
WARNING: shift/reduce conflict for RTE in state 63 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUALS in state 63 resolved as shift
WARNING: shift/reduce conflict for NE in state 63 resolved as shift
WARNING: shift/reduce conflict for LT in state 64 resolved as shift
WARNING: shift/reduce conflict for RT in state 64 resolved as shift
WARNING: shift/reduce conflict for LTE in state 64 resolved as shift
WARNING: shift/reduce conflict for RTE in state 64 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUALS in state 64 resolved as shift
WARNING: shift/reduce conflict for NE in state 64 resolved as shift
WARNING: shift/reduce conflict for LT in state 65 resolved as shift
WARNING: shift/reduce conflict for RT in state 65 resolved as shift
WARNING: shift/reduce conflict for LTE in state 65 resolved as shift
WARNING: shift/reduce conflict for RTE in state 65 resolved as shift
WARNING: shift/reduce conflict for DOUBLEEQUALS in state 65 resolved as shift
WARNING: shift/reduce conflict for NE in state 65 resolved as shift
